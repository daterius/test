name: RDP via Tailscale (Fixed Access)

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
      - name: Enable RDP fully + firewall
        shell: powershell
        run: |
          $ErrorActionPreference = "Stop"

          # Включаем RDP и разрешаем подключения
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name fDenyTSConnections -Value 0 -Force
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop" | Out-Null

          # Отключаем NLA и TLS-слой
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name UserAuthentication -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name SecurityLayer -Value 0 -Force

          # Открываем порт 3389
          cmd /c 'netsh advfirewall firewall add rule name="RDP-Tailscale" dir=in action=allow protocol=TCP localport=3389' | Out-Null

          # Разрешаем локальный вход для всех админов и RDP-пользователей
          secedit /export /cfg $env:TEMP\secpol.cfg
          (Get-Content $env:TEMP\secpol.cfg).replace("SeDenyRemoteInteractiveLogonRight = *S-1-5-32-546","") | Set-Content $env:TEMP\secpol.cfg
          secedit /configure /db secedit.sdb /cfg $env:TEMP\secpol.cfg /areas USER_RIGHTS

          # Перезапускаем службу RDP
          Set-Service -Name TermService -StartupType Automatic
          Restart-Service TermService
          Start-Sleep 3
          Write-Host "RDP service restarted."

      - name: Create RDP user
        shell: powershell
        run: |
          $chars = (65..90 + 97..122 + 48..57) | ForEach-Object {[char]$_}
          $password = -join (1..10 | ForEach-Object { $chars | Get-Random })
          $sec = ConvertTo-SecureString $password -AsPlainText -Force
          if (!(Get-LocalUser -Name "RDP" -ErrorAction SilentlyContinue)) {
            New-LocalUser -Name "RDP" -Password $sec -AccountNeverExpires
          } else {
            Set-LocalUser -Name "RDP" -Password $sec
          }
          Add-LocalGroupMember -Group "Administrators" -Member "RDP" -ErrorAction SilentlyContinue
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDP" -ErrorAction SilentlyContinue
          "RDP_USER=RDP" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "RDP_PASS=$password" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Install Tailscale
        shell: powershell
        run: |
          $file = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi" -OutFile $file
          Start-Process msiexec.exe -ArgumentList "/i `"$file`" /qn /norestart" -Wait
          Remove-Item $file

      - name: Bring up Tailscale
        shell: powershell
        env:
          TAILSCALE_AUTH_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}
        run: |
          $ErrorActionPreference = "Stop"
          $tsName = "gh-runner-$env:GITHUB_RUN_ID"
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey "$env:TAILSCALE_AUTH_KEY" --hostname $tsName
          Start-Sleep 5
          $ip = (& "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4) | Select-Object -First 1
          "TS_IP=$ip" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Show connection info
        shell: powershell
        run: |
          Write-Host "=== RDP INFO ==="
          Write-Host "Tailscale IP: $env:TS_IP"
          Write-Host "Username: $env:RDP_USER"
          Write-Host "Password: $env:RDP_PASS"
          Write-Host "================"

      - name: Keep alive
        shell: powershell
        run: |
          while ($true) { Write-Host (Get-Date) " Alive"; Start-Sleep 60 }
